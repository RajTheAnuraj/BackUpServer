#pragma checksum "/Users/Anuraj/Documents/Programming/BackUpServer/BackUpServerWeb/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c69ba7e15a25d4feb9b6e39f7adb08b3495c45e6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/Anuraj/Documents/Programming/BackUpServer/BackUpServerWeb/Views/_ViewImports.cshtml"
using BackUpServerWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/Anuraj/Documents/Programming/BackUpServer/BackUpServerWeb/Views/_ViewImports.cshtml"
using BackUpServerWeb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c69ba7e15a25d4feb9b6e39f7adb08b3495c45e6", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"64ba3ebce517ad52903e140ecd49366c08c777d5", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/Anuraj/Documents/Programming/BackUpServer/BackUpServerWeb/Views/Home/Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-12"">
       <div class=""mb-3 mt-3"">
           <div class=""mb-3"">Upload File</div>

           <div class=""mb-3 form-group"">
               <div class=""custom-file"">
                   <input type=""file"" class=""custom-file-input"" id=""file_input"" onchange=""setName();"" multiple/>
                   <label for=""file_input"" class=""custom-file-label"" id=""file_input_label"">Select File</label>
               </div>
           </div>

           <button type=""button"" class=""btn btn-primary"" onclick=""UploadMulti()"" id=""btn_upload"">Upload</button>
           <button type=""button"" class=""btn btn-primary d-none"" id=""btn_uploading"" disabled>
               <span class=""spinner-border spinner-border-sm"" role=""status"" aria-hidden=""true""></span>
               Uploading..
           </button>
           <button type=""button"" class=""btn btn-secondary d-none"" id=""btn_cancel"">Cancel</button>

           <div id=""result_grid""></div>
           
       </div>
    </div>
</div>


<script>
   ");
            WriteLiteral(@" function setName() {
        var file_input = document.getElementById(""file_input"");
        var file_input_label = document.getElementById(""file_input_label"");

        file_input_label.innerHTML = """";
        for (var i = 0; i < file_input.files.length; i++) {
            file_input_label.innerHTML += file_input.files[i].name + "", "";
        }
        

    }


    var httpReqs = new Array();
    var result_grid = document.getElementById(""result_grid"");


    function UploadMulti() {


        var btn_upload = document.getElementById(""btn_upload"");
        var file_input = document.getElementById(""file_input"");
        var btn_uploading = document.getElementById(""btn_uploading"");
        var btn_cancel = document.getElementById(""btn_cancel"");
        httpReqs = new Array();
        result_grid.innerHTML = """";

        for (var fc = 0; fc < file_input.files.length; fc++) {
            var file = file_input.files[fc];

            var progress_wrapper = document.createElement(""DIV"");
            progress_wra");
            WriteLiteral(@"pper.setAttribute(""id"", `progress_wrapper_${fc}`);
            result_grid.appendChild(progress_wrapper);

            var progress_status = document.createElement(""label"");
            progress_status.setAttribute(""id"", `progress_status_${fc}`);
            progress_wrapper.appendChild(progress_status);

            var progress_bar_wrapper = document.createElement(""DIV"");
            progress_bar_wrapper.className = ""progress mb-3"";
            progress_wrapper.appendChild(progress_bar_wrapper);

            var progress = document.createElement(""DIV"");
            progress.className = ""progress-bar"";
            progress.setAttribute(""id"", `progress_${fc}`);
            progress_bar_wrapper.appendChild(progress);

            var alert_wrapper = document.createElement(""DIV"");
            alert_wrapper.setAttribute(""id"", `alert_wrapper_${fc}`);
            alert_wrapper.classList.add(""d-none"");
            result_grid.appendChild(alert_wrapper);

            file_input.disabled = true;

            btn_uplo");
            WriteLiteral(@"ad.classList.add(""d-none"");
            btn_uploading.classList.remove(""d-none"");
            btn_cancel.classList.remove(""d-none"");

            progress_wrapper.classList.remove(""d-none"");

            var request = new XMLHttpRequest();
            httpReqs.push(request);
            httpReqs[fc].responseType = ""json"";

            var data = new FormData();

            var fileName = file.name;
            var filesize = file.size;


            data.append(""file"", file);

            httpReqs[fc].upload.id = fc;
            httpReqs[fc].upload.addEventListener(""progress"", function (e) {
                //console.log(""progress"",e.srcElement.id);
                var indx = e.srcElement.id;
                var percentageCompleted = Math.floor((e.position / e.totalSize) * 100);

                var progressInstance = document.getElementById(`progress_${indx}`);
                var progressStatusInstance = document.getElementById(`progress_status_${indx}`);
                progressInstance.style = `width:${p");
            WriteLiteral(@"ercentageCompleted}%`;
                progressStatusInstance.innerHTML = `${httpReqs[indx].filename} - ${percentageCompleted}%`;

            });

            httpReqs[fc].addEventListener(""load"", function (e) {
                console.log(""load"", e.srcElement.id, httpReqs[e.srcElement.id].status);
                var indx = e.srcElement.id;
                if (httpReqs[indx].status == 200) {
                    showAlertMulti(indx,""File uploaded"", ""success"");
                } else {
                    showAlertMulti(indx,e.message, ""error"");
                }
                resetMulti(indx);

            });

            httpReqs[fc].addEventListener(""error"", function (e) {
                //console.log(""error"", e.srcElement.id, httpReqs[e.srcElement.id].status);
                var indx = e.srcElement.id;
                showAlertMulti(indx,e.message, ""error"");
                resetMulti();
            });

            httpReqs[fc].addEventListener(""abort"", function (e) {
                //console.log(""");
            WriteLiteral(@"aborted"", e.srcElement.id, httpReqs[e.srcElement.id].status);
                var indx = e.srcElement.id;
                showAlertMulti(indx,""User cancelled the upload"", ""warning"");
                resetMulti();
            });

            btn_cancel.addEventListener(""click"", function () {
                for (var ac = 0; ac < httpReqs.length; ac++) {
                    httpReqs[ac].abort();
                }
            });

            httpReqs[fc].filename = fileName;
            httpReqs[fc].id = fc;
            httpReqs[fc].open(""post"", ""/home/Upload"");
            httpReqs[fc].send(data);
        }
    }

    function resetMulti() {
        var btn_upload = document.getElementById(""btn_upload"");
        var file_input = document.getElementById(""file_input"");
        var btn_uploading = document.getElementById(""btn_uploading"");
        var btn_cancel = document.getElementById(""btn_cancel"");
        var file_input_label = document.getElementById(""file_input_label"");

        file_input.value = null;
  ");
            WriteLiteral(@"      file_input.disabled = false;

        btn_upload.classList.remove(""d-none"");
        btn_uploading.classList.add(""d-none"");
        btn_cancel.classList.add(""d-none"");
        file_input_label.innerHTML = ""Select File"";
        
    }

    function showAlertMulti(indx,message, type) {
        var alert_wrapper = document.getElementById(`alert_wrapper_${indx}`);
        var progress_wrapper = document.getElementById(`progress_wrapper_${indx}`);

        alert_wrapper.classList.remove(""d-none"");

        progress_wrapper.innerHTML = """";
        alert_wrapper.innerHTML = `<div class=""alert alert-${type} alert-dismissible fade show"" role=""alert"">
               <strong>${httpReqs[indx].filename}</strong> - ${message}
               <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                   <span aria-hidden=""true"">&times;</span>
               </button>
           </div>`;
    }



    
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
